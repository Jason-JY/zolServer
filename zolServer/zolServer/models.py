# coding: utf-8
from django.db import models
import sys
reload(sys) # Python2.5 初始化后会删除 sys.setdefaultencoding 这个方法，我们需要重新载入
sys.setdefaultencoding('utf-8')

class scrapy_date(models.Model):
    class Meta:
        db_table = "scapy_date"
    id = models.CharField(max_length=20, db_column='id', primary_key=True)
    date = models.CharField(max_length=20,db_column='date',blank=False)


class cpu_list_test(models.Model):
    class Meta:
        db_table = "cpu_list_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    attr = models.CharField(max_length=20,db_column='attr',blank=False)
    name = models.CharField(max_length=255,db_column='name',blank=False)
    price = models.FloatField(max_length=255, db_column='price', blank=False)
    sales = models.IntegerField(max_length=255, db_column='sales', blank=False)
    provider = models.CharField(max_length=255, db_column='provider', blank=False)
    supportstaff_tel = models.CharField(max_length=255, db_column='supportstaff_tel', blank=True)
    supportstaff_qq = models.CharField(max_length=255, db_column='supportstaff_qq', blank=True)
    image1 = models.CharField(max_length=255, db_column='image1', blank=False)
    image2 = models.CharField(max_length=255, db_column='image2', blank=True)
    image3 = models.CharField(max_length=255, db_column='image3', blank=True)
    image4 = models.CharField(max_length=255, db_column='image4', blank=True)
    image5 = models.CharField(max_length=255, db_column='image5', blank=True)

class board_list_test(models.Model):
    class Meta:
        db_table = "board_list_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    attr = models.CharField(max_length=20, db_column='attr', blank=False)
    name = models.CharField(max_length=255,db_column='name',blank=False)
    price = models.FloatField(max_length=255, db_column='price', blank=False)
    sales = models.IntegerField(max_length=255, db_column='sales', blank=False)
    provider = models.CharField(max_length=255, db_column='provider', blank=False)
    supportstaff_tel = models.CharField(max_length=255, db_column='supportstaff_tel', blank=True)
    supportstaff_qq = models.CharField(max_length=255, db_column='supportstaff_qq', blank=True)
    image1 = models.CharField(max_length=255, db_column='image1', blank=False)
    image2 = models.CharField(max_length=255, db_column='image2', blank=True)
    image3 = models.CharField(max_length=255, db_column='image3', blank=True)
    image4 = models.CharField(max_length=255, db_column='image4', blank=True)
    image5 = models.CharField(max_length=255, db_column='image5', blank=True)

class mem_list_test(models.Model):
    class Meta:
        db_table = "mem_list_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    attr = models.CharField(max_length=20, db_column='attr', blank=False)
    name = models.CharField(max_length=255,db_column='name',blank=False)
    price = models.FloatField(max_length=255, db_column='price', blank=False)
    sales = models.IntegerField(max_length=255, db_column='sales', blank=False)
    provider = models.CharField(max_length=255, db_column='provider', blank=False)
    supportstaff_tel = models.CharField(max_length=255, db_column='supportstaff_tel', blank=True)
    supportstaff_qq = models.CharField(max_length=255, db_column='supportstaff_qq', blank=True)
    image1 = models.CharField(max_length=255, db_column='image1', blank=False)
    image2 = models.CharField(max_length=255, db_column='image2', blank=True)
    image3 = models.CharField(max_length=255, db_column='image3', blank=True)
    image4 = models.CharField(max_length=255, db_column='image4', blank=True)
    image5 = models.CharField(max_length=255, db_column='image5', blank=True)

class graphic_list_test(models.Model):
    class Meta:
        db_table = "graphic_list_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    attr = models.CharField(max_length=20, db_column='attr', blank=False)
    name = models.CharField(max_length=255,db_column='name',blank=False)
    price = models.FloatField(max_length=255, db_column='price', blank=False)
    sales = models.IntegerField(max_length=255, db_column='sales', blank=False)
    provider = models.CharField(max_length=255, db_column='provider', blank=False)
    supportstaff_tel = models.CharField(max_length=255, db_column='supportstaff_tel', blank=True)
    supportstaff_qq = models.CharField(max_length=255, db_column='supportstaff_qq', blank=True)
    image1 = models.CharField(max_length=255, db_column='image1', blank=False)
    image2 = models.CharField(max_length=255, db_column='image2', blank=True)
    image3 = models.CharField(max_length=255, db_column='image3', blank=True)
    image4 = models.CharField(max_length=255, db_column='image4', blank=True)
    image5 = models.CharField(max_length=255, db_column='image5', blank=True)

class radiator_list_test(models.Model):
    class Meta:
        db_table = "radiator_list_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    attr = models.CharField(max_length=20, db_column='attr', blank=False)
    name = models.CharField(max_length=255,db_column='name',blank=False)
    price = models.FloatField(max_length=255, db_column='price', blank=False)
    sales = models.IntegerField(max_length=255, db_column='sales', blank=False)
    provider = models.CharField(max_length=255, db_column='provider', blank=False)
    supportstaff_tel = models.CharField(max_length=255, db_column='supportstaff_tel', blank=True)
    supportstaff_qq = models.CharField(max_length=255, db_column='supportstaff_qq', blank=True)
    image1 = models.CharField(max_length=255, db_column='image1', blank=False)
    image2 = models.CharField(max_length=255, db_column='image2', blank=True)
    image3 = models.CharField(max_length=255, db_column='image3', blank=True)
    image4 = models.CharField(max_length=255, db_column='image4', blank=True)
    image5 = models.CharField(max_length=255, db_column='image5', blank=True)

class power_list_test(models.Model):
    class Meta:
        db_table = "power_list_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    attr = models.CharField(max_length=20, db_column='attr', blank=False)
    name = models.CharField(max_length=255,db_column='name',blank=False)
    price = models.FloatField(max_length=255, db_column='price', blank=False)
    sales = models.IntegerField(max_length=255, db_column='sales', blank=False)
    provider = models.CharField(max_length=255, db_column='provider', blank=False)
    supportstaff_tel = models.CharField(max_length=255, db_column='supportstaff_tel', blank=True)
    supportstaff_qq = models.CharField(max_length=255, db_column='supportstaff_qq', blank=True)
    image1 = models.CharField(max_length=255, db_column='image1', blank=False)
    image2 = models.CharField(max_length=255, db_column='image2', blank=True)
    image3 = models.CharField(max_length=255, db_column='image3', blank=True)
    image4 = models.CharField(max_length=255, db_column='image4', blank=True)
    image5 = models.CharField(max_length=255, db_column='image5', blank=True)

class cpu_detail_test(models.Model):
    class Meta:
        db_table = "cpu_detail_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    jbcs = models.CharField(max_length=255, db_column='基本参数', blank=True)
    sylx = models.CharField(max_length=255, db_column='适用类型', blank=True)
    cpuxl = models.CharField(max_length=255, db_column='cpu系列', blank=True)
    zzgy = models.CharField(max_length=255, db_column='制作工艺', blank=True)
    hxdh = models.CharField(max_length=255, db_column='核心代号', blank=True)
    cpujg = models.CharField(max_length=255, db_column='cpu架构', blank=True)
    cclx = models.CharField(max_length=255, db_column='插槽类型', blank=True)
    fzdx = models.CharField(max_length=255, db_column='封装大小', blank=True)
    bzxs = models.CharField(max_length=255, db_column='包装形式', blank=True)
    xncs = models.CharField(max_length=255, db_column='性能参数', blank=True)
    cpuzp = models.CharField(max_length=255, db_column='cpu主频', blank=True)
    dtjspl = models.CharField(max_length=255, db_column='动态加速频率', blank=True)
    hxsl = models.CharField(max_length=255, db_column='核心数量', blank=True)
    xcsl = models.CharField(max_length=255, db_column='线程数量', blank=True)
    sjhc = models.CharField(max_length=255, db_column='三级缓存', blank=True)
    zxgg = models.CharField(max_length=255, db_column='总线规格', blank=True)
    rsjgh = models.CharField(max_length=255, db_column='热设计功耗', blank=True)
    nccs = models.CharField(max_length=255, db_column='内存参数', blank=True)
    zczdnc = models.CharField(max_length=255, db_column='支持最大内存', blank=True)
    nclx = models.CharField(max_length=255, db_column='内存类型', blank=True)
    ncms = models.CharField(max_length=255, db_column='内存描述', blank=True)
    xkcs = models.CharField(max_length=255, db_column='显卡参数', blank=True)
    jcxk = models.CharField(max_length=255, db_column='集成显卡', blank=True)
    xkjbpl = models.CharField(max_length=255, db_column='显卡基本频率', blank=True)
    xkdtpl = models.CharField(max_length=255, db_column='显卡动态频率', blank=True)
    xkqttx = models.CharField(max_length=255, db_column='显卡其它特性', blank=True)
    jscs = models.CharField(max_length=255, db_column='技术参数', blank=True)
    rpjsjs = models.CharField(max_length=255, db_column='睿频加速技术', blank=True)
    cxcjs = models.CharField(max_length=255, db_column='超线程技术', blank=True)
    xnhjs = models.CharField(max_length=255, db_column='虚拟化技术', blank=True)
    zlj = models.CharField(max_length=255, db_column='指令集', blank=True)
    clq_64 = models.CharField(max_length=255, db_column='64位处理器', blank=True)
    qtjs = models.CharField(max_length=255, db_column='其它技术', blank=True)

class board_detail_test(models.Model):
    class Meta:
        db_table = "board_detail_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    zbxp = models.CharField(max_length=255, db_column='主板芯片', blank=True)
    jcxp = models.CharField(max_length=255, db_column='集成芯片', blank=True)
    zxpz = models.CharField(max_length=255, db_column='主芯片组', blank=True)
    xpzms = models.CharField(max_length=255, db_column='芯片组描述', blank=True)
    xsxp = models.CharField(max_length=255, db_column='显示芯片', blank=True)
    ypxp = models.CharField(max_length=255, db_column='音频芯片', blank=True)
    wkxp = models.CharField(max_length=255, db_column='网卡芯片', blank=True)
    clqgg = models.CharField(max_length=255, db_column='处理器规格', blank=True)
    cpulx = models.CharField(max_length=255, db_column='CPU类型', blank=True)
    cpucc = models.CharField(max_length=255, db_column='CPU插槽', blank=True)
    cpums = models.CharField(max_length=255, db_column='CPU描述', blank=True)
    ncgg = models.CharField(max_length=255, db_column='内存规格', blank=True)
    nclx = models.CharField(max_length=255, db_column='内存类型', blank=True)
    nccc = models.CharField(max_length=255, db_column='内存插槽', blank=True)
    zdncrl = models.CharField(max_length=255, db_column='最大内存容量', blank=True)
    ncms = models.CharField(max_length=255, db_column='内存描述', blank=True)
    kzcc = models.CharField(max_length=255, db_column='扩展插槽', blank=True)
    pciebz = models.CharField(max_length=255, db_column='PCI_E标准', blank=True)
    pciecc = models.CharField(max_length=255, db_column='PCI_E插槽', blank=True)
    pcicc = models.CharField(max_length=255, db_column='PCI插槽', blank=True)
    ccjk = models.CharField(max_length=255, db_column='存储接口', blank=True)
    iojk = models.CharField(max_length=255, db_column='I_O接口', blank=True)
    usbjk = models.CharField(max_length=255, db_column='USB接口', blank=True)
    hdmijk = models.CharField(max_length=255, db_column='HDMI接口', blank=True)
    wdjk = models.CharField(max_length=255, db_column='外接端口', blank=True)
    ps2jk = models.CharField(max_length=255, db_column='PS_2接口', blank=True)
    dyck = models.CharField(max_length=255, db_column='电源插口', blank=True)
    qtjk = models.CharField(max_length=255, db_column='其它接口', blank=True)
    bx = models.CharField(max_length=255, db_column='板型', blank=True)
    zbbx = models.CharField(max_length=255, db_column='主板板型', blank=True)
    wxcc = models.CharField(max_length=255, db_column='外形尺寸', blank=True)
    rjgl = models.CharField(max_length=255, db_column='软件管理', blank=True)
    biosxn = models.CharField(max_length=255, db_column='BIOS性能', blank=True)
    qtcs = models.CharField(max_length=255, db_column='其它参数', blank=True)
    dxkjs = models.CharField(max_length=255, db_column='多显卡技术', blank=True)
    gdms = models.CharField(max_length=255, db_column='供电模式', blank=True)
    raidgn = models.CharField(max_length=255, db_column='RAID功能', blank=True)
    qtxn = models.CharField(max_length=255, db_column='其它性能', blank=True)
    ssrq = models.CharField(max_length=255, db_column='上市日期', blank=True)
    zbfj = models.CharField(max_length=255, db_column='主板附件', blank=True)
    bzqd = models.CharField(max_length=255, db_column='包装清单', blank=True)
    bxxx = models.CharField(max_length=255, db_column='保修信息', blank=True)
    bxzc = models.CharField(max_length=255, db_column='保修政策', blank=True)
    zbsj = models.CharField(max_length=255, db_column='质保时间', blank=True)
    zbbz = models.CharField(max_length=255, db_column='质保备注', blank=True)
    dhbz = models.CharField(max_length=255, db_column='电话备注', blank=True)
    xxnr = models.CharField(max_length=2550, db_column='详细内容', blank=True)

class mem_detail_test(models.Model):
    class Meta:
        db_table = "mem_detail_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    jbcs = models.CharField(max_length=255, db_column='基本参数', blank=True)
    sylx = models.CharField(max_length=255, db_column='适用类型', blank=True)
    ncrl = models.CharField(max_length=255, db_column='内存容量', blank=True)
    rlms = models.CharField(max_length=255, db_column='容量描述', blank=True)
    nclx = models.CharField(max_length=255, db_column='内存类型', blank=True)
    nczp =  models.CharField(max_length=255, db_column='内存主频', blank=True)
    csbz = models.CharField(max_length=255, db_column='传输标准', blank=True)
    zjs = models.CharField(max_length=255, db_column='针脚数', blank=True)
    cclx = models.CharField(max_length=255, db_column='插槽类型', blank=True)
    jscs = models.CharField(max_length=255, db_column='技术参数', blank=True)
    klpz = models.CharField(max_length=255, db_column='颗粒配置', blank=True)
    clyc = models.CharField(max_length=255, db_column='CL延迟', blank=True)
    zzgy = models.CharField(max_length=255, db_column='制作工艺', blank=True)
    qtcs = models.CharField(max_length=255, db_column='其它参数', blank=True)
    srp = models.CharField(max_length=255, db_column='散热片', blank=True)
    gzdy = models.CharField(max_length=255, db_column='工作电压', blank=True)
    qtxn = models.CharField(max_length=255, db_column='其它性能', blank=True)
    qttd = models.CharField(max_length=255, db_column='其它特点', blank=True)
    bxxx = models.CharField(max_length=255, db_column='保修信息', blank=True)
    bxzc = models.CharField(max_length=255, db_column='保修政策', blank=True)
    zbsj = models.CharField(max_length=255, db_column='质保时间', blank=True)
    zbbz = models.CharField(max_length=255, db_column='质保备注', blank=True)
    dhbz = models.CharField(max_length=255, db_column='电话备注', blank=True)
    xxnr = models.CharField(max_length=2550, db_column='详细内容', blank=True)

class graphic_detail_test(models.Model):
    class Meta:
        db_table = "graphic_detail_test"
    id = models.CharField(max_length=20,db_column='id',primary_key=True)
    xkhx = models.CharField(max_length=255, db_column='显卡核心', blank=True)
    xpcs = models.CharField(max_length=255, db_column='芯片厂商', blank=True)
    xkxp = models.CharField(max_length=255, db_column='显卡芯片', blank=True)
    xkxpxl = models.CharField(max_length=255, db_column='显示芯片系列', blank=True)
    zzgy = models.CharField(max_length=255, db_column='制作工艺', blank=True)
    hxdh =  models.CharField(max_length=255, db_column='核心代号', blank=True)
    hxpl = models.CharField(max_length=255, db_column='核心频率', blank=True)
    cudahx = models.CharField(max_length=255, db_column='CUDA核心', blank=True)
    xcgg = models.CharField(max_length=255, db_column='显存规格', blank=True)
    xcpl = models.CharField(max_length=255, db_column='显存频率', blank=True)
    xclx = models.CharField(max_length=255, db_column='显存类型', blank=True)
    xcrl = models.CharField(max_length=255, db_column='显存容量', blank=True)
    xcwk = models.CharField(max_length=255, db_column='显存位宽', blank=True)
    zdfbl = models.CharField(max_length=255, db_column='最大分辨率', blank=True)
    xkjk = models.CharField(max_length=255, db_column='显卡接口', blank=True)
    jklx = models.CharField(max_length=255, db_column='接口类型', blank=True)
    iojk = models.CharField(max_length=255, db_column='I_O接口', blank=True)
    dyjk = models.CharField(max_length=255, db_column='电源接口', blank=True)
    qtcs = models.CharField(max_length=255, db_column='其它参数', blank=True)
    xslx = models.CharField(max_length=255, db_column='显示类型', blank=True)
    srfs = models.CharField(max_length=255, db_column='散热方式', blank=True)
    api_3d = models.CharField(max_length=255, db_column='API_3D', blank=True)
    gdms = models.CharField(max_length=255, db_column='供电模式', blank=True)
    zchdcp = models.CharField(max_length=255, db_column='支持HDCP', blank=True)
    zdgh = models.CharField(max_length=2550, db_column='最大功耗', blank=True)
    jydy = models.CharField(max_length=255, db_column='建议电源', blank=True)
    qttd = models.CharField(max_length=255, db_column='其它特点', blank=True)
    sssj = models.CharField(max_length=255, db_column='上市时间', blank=True)
    bxxx = models.CharField(max_length=255, db_column='保修信息', blank=True)
    bxzc = models.CharField(max_length=255, db_column='保修政策', blank=True)
    zbsj = models.CharField(max_length=255, db_column='质保时间', blank=True)
    zbbz = models.CharField(max_length=255, db_column='质保备注', blank=True)
    xxnr = models.CharField(max_length=2550, db_column='详细内容', blank=True)

class radiator_detail_test(models.Model):
    class Meta:
        db_table = "radiator_detail_test"
    id = models.CharField(max_length=20, db_column='id', primary_key=True)
    jbcs = models.CharField(max_length=255, db_column='基本参数', blank=True)
    srqlx = models.CharField(max_length=255, db_column='散热器类型', blank=True)
    srfs = models.CharField(max_length=255, db_column='散热方式', blank=True)
    flcs = models.CharField(max_length=255, db_column='风冷参数', blank=True)
    fscc = models.CharField(max_length=255, db_column='风扇尺寸', blank=True)
    zclx = models.CharField(max_length=255, db_column='轴承类型', blank=True)
    zsms = models.CharField(max_length=255, db_column='转数描述', blank=True)
    zdfl = models.CharField(max_length=255, db_column='最大风量', blank=True)
    fy = models.CharField(max_length=255, db_column='风压', blank=True)
    zy = models.CharField(max_length=255, db_column='噪音', blank=True)
    srqfj = models.CharField(max_length=255, db_column='散热器附件', blank=True)
    bzqd = models.CharField(max_length=255, db_column='包装清单', blank=True)
    bxxx = models.CharField(max_length=255, db_column='保修信息', blank=True)
    bxzc = models.CharField(max_length=255, db_column='保修政策', blank=True)
    zbsj = models.CharField(max_length=255, db_column='质保时间', blank=True)
    zbbz = models.CharField(max_length=255, db_column='质保备注', blank=True)
    dhbz = models.CharField(max_length=255, db_column='电话备注', blank=True)
    xxnr = models.CharField(max_length=2550, db_column='详细内容', blank=True)

class power_detail_test(models.Model):
    class Meta:
        db_table = "power_detail_test"
    id = models.CharField(max_length=20, db_column='id', primary_key=True)
    jbcs = models.CharField(max_length=255, db_column='基本参数', blank=True)
    dylx = models.CharField(max_length=255, db_column='电源类型', blank=True)
    syfw = models.CharField(max_length=255, db_column='适用范围', blank=True)
    dybb = models.CharField(max_length=255, db_column='电源版本', blank=True)
    cxlx = models.CharField(max_length=255, db_column='出线类型', blank=True)
    edgl = models.CharField(max_length=255, db_column='额定功率', blank=True)
    fsms = models.CharField(max_length=255, db_column='风扇描述', blank=True)
    dycc = models.CharField(max_length=255, db_column='电源尺寸', blank=True)
    dyjk = models.CharField(max_length=255, db_column='电源接口', blank=True)
    zbjk = models.CharField(max_length=255, db_column='主板接口', blank=True)
    cpujk44 = models.CharField(max_length=255, db_column='cpu接口44', blank=True)
    cpujkf = models.CharField(max_length=255, db_column='cpu接口方', blank=True)
    xkjk62 = models.CharField(max_length=255, db_column='显卡接口62', blank=True)
    xkjk6 = models.CharField(max_length=255, db_column='显卡接口6', blank=True)
    ypjk = models.CharField(max_length=255, db_column='硬盘接口', blank=True)
    rqjk = models.CharField(max_length=255, db_column='软驱接口', blank=True)
    gdjk = models.CharField(max_length=255, db_column='供电接口', blank=True)
    xncs = models.CharField(max_length=255, db_column='性能参数', blank=True)
    jlsc = models.CharField(max_length=255, db_column='交流输入', blank=True)
    scdl3_3V = models.CharField(max_length=255, db_column='输出电流3_3V', blank=True)
    scdl5V = models.CharField(max_length=255, db_column='输出电流5V', blank=True)
    scdl5Vsb = models.CharField(max_length=255, db_column='输出电流5Vsb', blank=True)
    scdl12V = models.CharField(max_length=255, db_column='输出电流12V', blank=True)
    scdl_12V = models.CharField(max_length=255, db_column='输出电流_12V', blank=True)
    qtcs = models.CharField(max_length=255, db_column='其他参数', blank=True)
    rfclx = models.CharField(max_length=255, db_column='PFC类型', blank=True)
    bhgn = models.CharField(max_length=255, db_column='保护功能', blank=True)
    zhxl = models.CharField(max_length=255, db_column='转换效率', blank=True)
    plusrz = models.CharField(max_length=255, db_column='PLUS认证_80', blank=True)
    agrz = models.CharField(max_length=255, db_column='安规认证', blank=True)
    dyfj = models.CharField(max_length=255, db_column='电源附件', blank=True)
    dyqd = models.CharField(max_length=255, db_column='包装清单', blank=True)
    bxxx = models.CharField(max_length=255, db_column='保修信息', blank=True)
    bxzc = models.CharField(max_length=255, db_column='保修政策', blank=True)
    zbsj = models.CharField(max_length=255, db_column='质保时间', blank=True)
    zbbz = models.CharField(max_length=255, db_column='质保备注', blank=True)
    dhbz = models.CharField(max_length=255, db_column='电话备注', blank=True)
    xxnr = models.CharField(max_length=2550, db_column='详细内容', blank=True)
